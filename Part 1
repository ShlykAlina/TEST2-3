print("*" * 10, " Игра Крестики-нолики для двух игроков ", "*" * 10)

board = list(range(1, 10))


class Crzero(object):
    """
    Реализует игру в крестики-нолики
    """
    def draw_board(self, board):
        """
        Визуализация игрового поля
        :param board:[list] board = list(range(1, 10)
        """
        print("-" * 13)
        for i in range(3):
            print("|", board[0 + i * 3], "|", board[1 + i * 3], "|", board[2 + i * 3], "|")
            print("-" * 13)
    
        def take_input(self, player_token):
        """
        Ввод данных от пользователя в нашу игру
        :param player_token: [str]  Х or O // зависит от того, чей сейчас ход
        ______________
        - Конструкции <try/except> и <if/else> позволяют ограничить выбор пользователя числами от 1 до 9
        - Функция изменяет имеющийся список board
        """
        valid = False
        while not valid:
            player_answer = input("Куда поставим " + player_token + "? ")
            try:
                player_answer = int(player_answer)
            except:
                print("Некорректный ввод. Вы уверены, что ввели число?")
                continue
            if player_answer >= 1 and player_answer <= 9:
                if (str(board[player_answer - 1]) not in "XO"):
                    board[player_answer - 1] = player_token
                    valid = True
                else:
                    print("Эта клетка уже занята!")
            else:
                print("Некорректный ввод. Введите число от 1 до 9.")

    def check_win(self, board):
        """
        Проверка игрового поля
        :param board: [list] board = list(range(1, 10) // измененный список board после ввода данных пользователем
        :return: [str] Х or O, board[each[0]] // возвращение выигрышного символа
        :return: [bool] False // отсутствие выигрышной комбинации
        """
        win_coord = ((0, 1, 2), (3, 4, 5), (6, 7, 8), (0, 3, 6), (1, 4, 7), (2, 5, 8), (0, 4, 8), (2, 4, 6))
        for each in win_coord:
            if board[each[0]] == board[each[1]] == board[each[2]]:
                return board[each[0]]
        return False
    def main(self, board):
        """
        Реализация игры с помощью объединения всех описанных функций
        :param board: [list] board = list(range(1, 10) // измененный список board после ввода данных пользователем
        """
        counter = 0
        win = False
        while not win:
            Crzero.draw_board(self, board)
            if counter % 2 == 0:
                Crzero.take_input(self, "X")
            else:
                Crzero.take_input(self, "O")
            counter += 1
            if counter > 4:
                tmp = Crzero.check_win(self, board)
                if tmp:
                    print(tmp, "выиграл!")
                    win = True
                    break
            if counter == 9:
                print("Ничья!")
                break
        Crzero.draw_board(self, board)


help(Crzero)
a = Crzero()
a.main(board)

input("Нажмите Enter для выхода!")
